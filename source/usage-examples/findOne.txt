===============
Find a Document
===============

.. default-domain:: mongodb

You can retrieve a single document from your collection with the
``*Collection.FindOne()`` method. 

..
   method

The ``FindOne()`` method takes a query document that specifies the
subset of your collection that you would like to retrieve a document from. If you
pass the ``FindOne()`` method an empty document, MongoDB will consider your
entire collection when retrieving your document. For more information on documents
in the MongoDB Go driver, see our
:doc:`guide on data formats </fundamentals/data-formats>`.

You must pass the ``FindOne()`` method a ``context.Context`` interface type
value. For more information on the ``context.Context`` interface and the
``context`` package, see our :doc:`guide on context </fundamentals/context>`.

..
   options

You can specify options that modify the behavior of your ``FindOne()`` method.
One example of an option is **sort**, which orders the subset of your collection
that matches your query before the first document is retrieved. Another example
of an option is a **projection**, which specifies or restricts the fields in
your returned document. You can specify additional options by passing the
``FindOne()`` method a pointer to a ``FindOneOptions`` value. You
can configure a ``FindOneOptions`` value by using setter methods such as the
``*FindOneOptions.SetProjection()`` method.

..
   return

If the query filter you specified in your ``FindOne()`` method call matches one
or more documents in the collection, it returns the first matched result. The
return type ``SingleResult`` represents a single document returned from a query
to a MongoDB instance. You can call the ``*SingleResult.Decode()`` method
to unmarshall a ``SingleResult`` value into a variable. Pass the ``Decode()`` 
method a pointer to the variable that you would like to contain your returned
document. 

..
   error 

The ``Decode()`` method will return the error value of your ``FindOne()`` method
call. 

- If a document matched your query, and there are no errors retrieving the
  document, the ``Decode()`` method will return ``nil``. 
- If no documents matched your query, the ``Decode()`` method will return an
  ``ErrNoDocuments`` error. 
- If there was an error retrieving your document, the ``Decode()`` method will
  return the error. 

Example
-------

The following code example retrieves a single document from the ``movies``
collection. It uses the following arguments for the ``FindOne()`` method:

- An empty **Context** instance returned from the ``context.TODO()`` function.
- A **query document** that only matches movies with the title exactly matching
  the text ``"The Room"``.
- A **configuration** that specifies a **sort** on matched documents in
  descending order by rating, such that the retrieved document has the highest
  rating. Our configuration also specifies a **projection** for our results so
  that our MongoDB instance only sends the ``title`` and ``imdb`` fields of
  our retrieved document.

.. include:: /includes/connect-guide-note.rst

.. literalinclude:: findOne.go
   :language: go

If you run the example above, you should see a result that looks like this:

.. literalinclude:: findOne.go.txt
   :language: none

For more information on the methods, interfaces, structs, and functions
mentioned on this page, see the following API documentation:

- :go-api:`*Collection.FindOne() </mongo#Collection.FindOne>`
- `Context <https://pkg.go.dev/context#Context>`__
- :go-api:`FindOneOptions </mongo/options#FindOneOptions>`
- :go-api:`*FindOneOptions.SetProjection() </mongo/options#FindOneOptions.SetProjection>`
- :go-api:`options.FindOne() </mongo/options#FindOne>`
- :go-api:`SingleResult </mongo#SingleResult>`
- :go-api:`*SingleResult.Decode() </mongo#SingleResult.Decode>`
- `context.TODO() <https://pkg.go.dev/context#TODO>`__
