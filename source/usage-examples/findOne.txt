===============
Find a Document
===============

.. default-domain:: mongodb

You can retrieve a single document from your collection with the
``Collection.FindOne()`` method. 

..
   method

The ``FindOne()`` method takes a query document that specifies the
subset of your collection that you would like to retrieve. If you
pass the ``FindOne()`` method an empty document, MongoDB will retrieve your
entire collection. For more information on documents in the MongoDB Go driver,
see our :doc:`guide on data formats </fundamentals/data-formats>`.

You must pass the ``FindOne()`` method a ``context.Context`` interface type
value. For more information on the ``context.Context`` interface and the
``context`` package, see our :doc:`guide on context </fundamentals/context>`.

..
   options

You can specify additional options for your ``FindOne()`` method call by passing
the ``FindOne()`` method a ``*FindOneOptions`` value. For example, your
``FindOneOptions`` value can specify a projection for your results, which
configures the fields in the returned document. Your ``FindOneOptions`` value
can also specify a **sort**, which orders your results before the first
document is selected from your result set.

..
   return + error

If the query filter you specified in your ``FindOne()`` method call matches one
or more documents in the collection, it returns the first matched result. The
return type ``SingleResult`` represents a single document returned from a query
to a MongoDB instance. You can call the ``*SingleResult.Decode()`` method
to unmarshall a ``SingleResult`` value into a variable with a type that can
represent a document. If there were no errors retrieving your document,
``Decode()`` will return ``Nil``. If there was an error retrieving your
document, ``Decode()`` will return the error. If no documents matched your
query, ``Decode()`` will return an ``ErrNoDocuments`` error. 

Example
-------

The following code example retrieves a single document from the ``movies``
collection. It uses the following functions and methods:

- An empty **Context** instance returned from the ``context.TODO()`` function.

- A **configuration** that specifies a **sort** on matched documents in
  descending order by rating, such that the returned document has the highest
  rating. Our configuration also specifies a **projection** for our results so
  that only the ``title`` and ``imdb`` fields are retrieved.

- A **query document** that is passed to the ``FindOne()`` method. The query
  only matches movies with the title exactly matching the text ``"The Room"``.

.. include:: /includes/connect-guide-note.rst

.. literalinclude:: findOne.go
   :language: go

If you run the example above, you should see a result that looks like this:

.. literalinclude:: findOne.go.txt
   :language: none

For more information on the methods, interfaces, structs, and functions
mentioned on this page, see the following API documentation:

- :go-api:`Collection.FindOne() </mongo#Collection.FindOne>`
- `Context <https://pkg.go.dev/context#Context>`__
- :go-api:`FindOneOptions </mongo/options#FindOneOptions>`
- :go-api:`options.FindOne() </mongo/options#FindOne>`
- :go-api:`SingleResult </mongo/options#FindOneOptions>`
- `context.TODO() <https://pkg.go.dev/context#TODO>`__
